<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 600">
  <rect width="100%" height="100%" fill="#d0faf8" />
  
  
  <!--Large circle-->
  <circle cx="300" cy="300" r="270" fill="#ffffff" stroke="#6C71EA" stroke-width="5" />
  
  <!--Small circles-->
  <!-- Path 1: Top to right edge, dip inside, return to top -->
  <path id="path1" fill="none" stroke="none"
        d="
          M 300,40                   
          A 270,270 0 0,1 555,300    
          A 250,250 0 0,0 300,40       
        " />

  <!-- Small Circle Moving Along Path 1 -->
  <circle r="15" fill="#0E15A3">
    <animateMotion dur="10s" repeatCount="indefinite" calcMode="spline" keySplines="0.4 0 0.6 1; 0.4 0 0.6 1">
      <mpath href="#path1" />
    </animateMotion>
  </circle>

  <!-- Path 2: Right to bottom edge, dip inside, return to right -->
  <path id="path2" fill="none" stroke="none"
        d="
          M 560,300                     
          A 270,270 0 0,1 310,560       
          A 270,270 0 0,0 560,300 
        " />
  
  <!-- Small Circle Moving Along Path 2 -->
  <circle r="15" fill="#0E15A3">
    <animateMotion dur="10s" repeatCount="indefinite" calcMode="spline" keySplines="0.4 0 0.6 1; 0.4 0 0.6 1">
      <mpath href="#path2" />
    </animateMotion>
  </circle>
  
  <!-- Path 3: Bottom to top-left edge, dip inside, return to bottom -->
  <path id="path3" fill="none" stroke="none"
        d="
          M 300,560                     
          A 270,270 0 0,1 70,400       
          A 250,250 0 0,0 300,560 
        " />
  
  <!-- Small Circle Moving Along Path 3 -->
  <circle r="15" fill="#0E15A3">
    <animateMotion dur="10s" repeatCount="indefinite" calcMode="spline" keySplines="0.4 0 0.6 1; 0.4 0 0.6 1">
      <mpath href="#path3" />
    </animateMotion>
  </circle>
  
  <!-- Path 4: Top-left to top edge, dip inside, return to top-left -->
  <path id="path4" fill="none" stroke="none"
        d="
          M 40,300                     
          A 270,270 0 0,1 310,45       
          A 250,250 0 0,0 40,300 
        " />
  
  <!-- Small Circle Moving Along Path 4 -->
  <circle r="15" fill="#0E15A3">
    <animateMotion dur="10s" repeatCount="indefinite" calcMode="spline" keySplines="0.4 0 0.6 1; 0.4 0 0.6 1">
      <mpath href="#path4" />
    </animateMotion>
  </circle>


<!-- Definitions for gradients and filters -->
  <defs>
    <!-- Radial gradients for shiny effect -->
    <radialGradient id="shinyGrad1" cx="30%" cy="30%" r="70%" fx="30%" fy="30%">
      <stop offset="0%" stop-color="#a48ff0" />
      <stop offset="50%" stop-color="#8a73e2" />
      <stop offset="100%" stop-color="#7460c7" />
    </radialGradient>
    
    <radialGradient id="shinyGrad2" cx="30%" cy="30%" r="70%" fx="30%" fy="30%">
      <stop offset="0%" stop-color="#b59df9" />
      <stop offset="50%" stop-color="#9e85ed" />
      <stop offset="100%" stop-color="#8b76dc" />
    </radialGradient>
    
    <radialGradient id="shinyGrad3" cx="30%" cy="30%" r="70%" fx="30%" fy="30%">
      <stop offset="0%" stop-color="#c6acff" />
      <stop offset="50%" stop-color="#b196f9" />
      <stop offset="100%" stop-color="#9682e4" />
    </radialGradient>
    
    <radialGradient id="shinyGrad4" cx="30%" cy="30%" r="70%" fx="30%" fy="30%">
      <stop offset="0%" stop-color="#d7bcff" />
      <stop offset="50%" stop-color="#c3a7ff" />
      <stop offset="100%" stop-color="#9e8be9" />
    </radialGradient>
    
    <!-- Glow filter -->
    <!-- <filter id="glow" x="-30%" y="-30%" width="160%" height="160%">
      <feGaussianBlur stdDeviation="4" result="blur" />
      <feComposite in="SourceGraphic" in2="blur" operator="over" />
    </filter> -->
  </defs>


  <!--Animated Circles - Largest to smallest for proper layering-->
  <g transform="translate(300, 300)">
    <circle r="70" fill="url(#shinyGrad4)" opacity="0.7" filter="url(#glow)">
      <animate 
        attributeName="r" 
        values="70;130;70" 
        dur="4s" 
        begin="0.9s"
        repeatCount="indefinite" 
        calcMode="spline"
        keySplines="0.4 0 0.6 1; 0.4 0 0.6 1" />
      <animateTransform 
        attributeName="transform"
        attributeType="XML"
        type="rotate"
        from="0"
        to="360"
        begin="0s"
        dur="15s"
        repeatCount="indefinite" />
    </circle>
  </g>
  
  <g transform="translate(300, 300)">
    <circle r="70" fill="url(#shinyGrad3)" opacity="0.75" filter="url(#glow)">
      <animate 
        attributeName="r" 
        values="70;120;70" 
        dur="4s" 
        begin="0.6s"
        repeatCount="indefinite" 
        calcMode="spline"
        keySplines="0.4 0 0.6 1; 0.4 0 0.6 1" />
      <animateTransform 
        attributeName="transform"
        attributeType="XML"
        type="rotate"
        from="360"
        to="0"
        begin="0s"
        dur="12s"
        repeatCount="indefinite" />
    </circle>
  </g>

  <g transform="translate(300, 300)">
    <circle r="70" fill="url(#shinyGrad2)" opacity="0.8" filter="url(#glow)">
      <animate 
        attributeName="r" 
        values="70;110;70" 
        dur="4s" 
        begin="0.3s"
        repeatCount="indefinite" 
        calcMode="spline"
        keySplines="0.4 0 0.6 1; 0.4 0 0.6 1" />
      <animateTransform 
        attributeName="transform"
        attributeType="XML"
        type="rotate"
        from="0"
        to="360"
        begin="0s"
        dur="10s"
        repeatCount="indefinite" />
    </circle>
  </g>

  <g transform="translate(300, 300)">
    <circle r="70" fill="url(#shinyGrad1)" opacity="0.85" filter="url(#glow)">
      <animate 
        attributeName="r" 
        values="70;100;70" 
        dur="4s" 
        begin="0s"
        repeatCount="indefinite" 
        calcMode="spline"
        keySplines="0.4 0 0.6 1; 0.4 0 0.6 1" />
      <animateTransform 
        attributeName="transform"
        attributeType="XML"
        type="rotate"
        from="360"
        to="0"
        begin="0s"
        dur="8s"
        repeatCount="indefinite" />
    </circle>
  </g>

  <!--Inside small Circle-->
  <circle cx="300" cy="300" r="70" fill="#7460c7" />
  
  <!-- Add a subtle highlight to center circle -->
  <ellipse cx="280" cy="280" rx="30" ry="30" fill="white" opacity="0.2" />
  
  <circle cx="300" cy="300" r="53" fill="#eae3f2" stroke="#FFFFFF" stroke-width="4" />
  
  <!-- Counter text - properly positioned in the center -->
  <text id="counter" x="300" y="315" font-family="Arial" font-size="40" font-weight="600"  text-anchor="middle" fill="#0E15A3">00</text>
  
  <!-- Breath text -->
  <text id="breathText" x="300" y="390" font-size="20" fill="#0E15A3" font-family="Arial" text-anchor="middle" font-weight="bold">Breath In</text>
  
  <!-- SVG Script for breathing counter animation -->
  <!-- <script type="text/javascript"><![CDATA[
    // Get the counter text and breath text elements
    const counterElement = document.getElementById('counter');
    const breathTextElement = document.getElementById('breathText');
    
    // Animation timing variables
    const cycleDuration = 20000; // 20 seconds per full cycle
    const halfCycle = cycleDuration / 2; // 10 seconds for each direction
    
    // Function to handle the animation
    function animate() {
      const now = Date.now();
      const elapsed = now % cycleDuration;
      
      let value;
      if (elapsed < halfCycle) {
        // First half: 0 to 10 with easing
        const progress = elapsed / halfCycle;
        // Apply easing function for smoother count
        const easedProgress = 0.5 - 0.5 * Math.cos(progress * Math.PI);
        value = easedProgress * 10;
        breathTextElement.textContent = "Breath In";
      } else {
        // Second half: 10 to 0 with easing
        const progress = (elapsed - halfCycle) / halfCycle;
        // Apply easing function for smoother count
        const easedProgress = 0.5 + 0.5 * Math.cos(progress * Math.PI);
        value = easedProgress * 10;
        breathTextElement.textContent = "Breath Out";
      }
      
      // Update the counter text with rounded value
      counterElement.textContent = Math.round(value);
      
      // Continue animation
      requestAnimationFrame(animate);
    }
    
    // Start the animation
    animate();
  ]]></script> -->

</svg>